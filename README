jMathPaper
==========

A simple and easy to use calculation application, which works similar to taking
notes on a sheet of paper.

![A screenshot of the main view.](./screenshots/01-main-view.png)


License
-------

jMathPaper is licensed under GPLv3.


Dependencies
------------

Please see the attached license files for details.

 * [EvalEx](https://github.com/uklimaschewski/EvalEx/), BSD-like
 * [jline2](https://github.com/jline/jline2), BSD-like
 * [Lanterna](https://github.com/mabe02/lanterna), LGPLv3
 * [picocli](https://github.com/remkop/picocli), Apache 2.0
 * [SWT](https://www.eclipse.org/swt/), Eclipse Public License 1.0


Usage
-----

When you start jMathPaper you are greeted with a (currently empty) list of
previous expressions and the input box to enter a new one. You can enter any
expression you want to evaluate. Additionally, there is a larger input are to
the right which allows you to take notes.

You can save and load papers from the menu, they are stored in a very simple
cleartext format, so it is easy to create and edit them without jMathPaper.
Examples can be found in the examples directory.

Let us start with something simple and enter a few simple expressions:

    ID                               Expression Result
    --------------------------------------------------
    #1                                       1+1 =   2
    #2                                       5*5 =  25
    #3                                    239-38 = 201

One of the big features of jMathPaper is that you can easily reference
a previous result by using its ID, like this:

    #1                                       1+1 =   2
    #2                                       5*5 =  25
    #3                                    239-38 = 201
    #4                                     #2*25 = 625

We can also define variables which we can reference:

    #1                                       1+1 =   2
    #2                                       5*5 =  25
    #3                                    239-38 = 201
    #4                                     #2*25 = 625
    length                             length=10 =  10
    width                                width=5 =   5
    area                       area=length*width =  50

Now if we made a mistake, for example the width really is 7, we can simply press
up and down to scroll through the history and execute the corrected expression
again. The previously executed expressions do not change, so we need to evaluate
them again:

    #1                                       1+1 =   2
    #2                                       5*5 =  25
    #3                                    239-38 = 201
    #4                                     #2*25 = 625
    length                             length=10 =  10
    width                                width=5 =   5
    area                       area=length*width =  50
    width                                width=7 =   7
    area                       area=length*width =  70

We can also use mathematical functions, like `sin`:

    #1                             sin(70) = 0.9396926

See the documentation of [EvalEx](https://github.com/uklimaschewski/EvalEx/blob/master/README.md)
to see what functions are supported.

Additionally, we can also enter numbers in hex, octal or binary:

    hex                                 hex=0xff = 255
    octal                             octal=0o77 =  63
    binary                           binary=0b11 =   3

If there is need to comment lines or parts of equations C style comments can be
used:

    #10       // We can also comment whole lines. =   0
    #11           1+1 // Or lines with equations. =   2
    #12    1 + /* Or inlined commenting. */ 1 + 1 =   3

There are also a few commands which can be used:

    clean/clear/reset  Clears the current paper.


Technical information
---------------------

jMathPaper is a Java 8 application which uses SWT and EvalEx.

The save format is a simple plaintext format, with UTF-8 as encoding and UNIX
line endings. Everything from the start of the file to the first empty line is
treated as expression, everything below the first empty line is treated as note.
